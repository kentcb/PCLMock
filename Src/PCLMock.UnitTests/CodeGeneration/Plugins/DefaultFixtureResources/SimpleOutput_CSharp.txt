// -----------------------------------------------------------------------
// <autogenerated>
//    This code was generated from a template.
// 
//    Changes to this file may cause incorrect behaviour and will be lost
//    if the code is regenerated.
// </autogenerated>
// ------------------------------------------------------------------------
namespace The.Namespace
{
    [System.CodeDom.Compiler.GeneratedCode("PCLMock", "$VERSION$")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    internal partial class ISomeInterfaceMock : global::PCLMock.MockBase<global::ISomeInterface>, global::ISomeInterface
    {
        public ISomeInterfaceMock(global::PCLMock.MockBehavior behavior = global::PCLMock.MockBehavior.Strict): base(behavior)
        {
            ConfigureBehaviorGenerated();
            ConfigureBehavior();
            if ((behavior) == (global::PCLMock.MockBehavior.Loose))
            {
                ConfigureLooseBehavior();
            }
        }

        private void ConfigureBehaviorGenerated()
        {
            this.When(x => x.StringProperty).Return((global::System.String)(default));
            this.When(x => x.IntProperty).Return((global::System.Int32)(default));
            this.When(x => x.StringMethod()).Return((global::System.String)(default));
            this.When(x => x.IntMethod()).Return((global::System.Int32)(default));
        }

        partial void ConfigureBehavior();
        partial void ConfigureLooseBehavior();
        public global::System.String StringProperty
        {
            get
            {
                return this.Apply(x => x.StringProperty);
            }
        }

        public global::System.Int32 IntProperty
        {
            get
            {
                return this.Apply(x => x.IntProperty);
            }
        }

        public void VoidMethod()
        {
            this.Apply(x => x.VoidMethod());
        }

        public global::System.String StringMethod()
        {
            return this.Apply(x => x.StringMethod());
        }

        public global::System.Int32 IntMethod()
        {
            return this.Apply(x => x.IntMethod());
        }
    }
}
