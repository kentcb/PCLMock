using System.Threading.Tasks;

class CustomTask : Task
{
}

interface ISomeInterface
{
 	Task SomeProperty
	{
		get;
	}

	Task SomeOtherProperty
	{
		get;
	}

	// expecting this to be ignored because it's set-only
	Task SomeSetOnlyProperty
	{
		set;
	}

	Task this[int i, float f]
	{
		get;
	}

    Task SomeMethod();
	Task SomeMethod(string s, int i);

	// expecting these to be ignored because of the type parameters
	Task SomeMethod<T>();
	Task SomeMethod<T1, T2>();

	// expecting these to be ignored because of it being a custom task (which we have no way of providing a default value for)
    CustomTask SomeMethod();
	CustomTask SomeMethod(string s, int i);
}