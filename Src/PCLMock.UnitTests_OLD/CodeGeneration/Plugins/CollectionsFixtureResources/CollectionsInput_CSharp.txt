using System;
using System.Collections.Generic;

interface ICustomCollection<T> : ICollection<T>
{
}

interface ISomeInterface
{
	ICollection<int> SomeProperty
	{
		get;
	}

	// expecting this to be ignored because it's set-only
	ICollection<string> SomeSetOnlyProperty
	{
		set;
	}

	IReadOnlyCollection<int> SomeReadOnlyProperty
	{
		get;
	}

	ICollection<string> SomeMethod();
	ICollection<string> SomeMethod(int i, float f);

	// should all be ignored because they're generic
	ICollection<int> SomeGenericMethod<T>();
	ICollection<T> SomeOtherGenericMethod<T>();

	// should be ignored because they're a custom enumerable type
	ICustomCollection<int> SomeCustomProperty
	{
		get;
	}

	ICustomCollection<string> SomeMethod();
	ICustomCollection<string> SomeMethod(int i, float f);
}

interface ISomeGenericInterface<T>
{
	ICollection<T> SomeProperty
	{
		get;
	}

	ICollection<T> SomeMethod();
	ICollection<T> SomeMethod(int i, float f);
}