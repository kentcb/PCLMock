namespace The.Namespace
{
    [System.CodeDom.Compiler.GeneratedCode("PCLMock", "$VERSION$")]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Mock<TFirst, TSecond> : global::PCLMock.MockBase<global::IGenericInterface<TFirst, TSecond>>, global::IGenericInterface<TFirst, TSecond> where TFirst : global::System.IComparable<TSecond>, new ()where TSecond : struct
    {
        public Mock(global::PCLMock.MockBehavior behavior = global::PCLMock.MockBehavior.Strict): base (behavior)
        {
            ConfigureBehaviorGenerated();
            ConfigureBehavior();
            if ((behavior) == (global::PCLMock.MockBehavior.Loose))
            {
                ConfigureLooseBehaviorGenerated();
                ConfigureLooseBehavior();
            }
        }

        private void ConfigureBehaviorGenerated()
        {
        }

        private void ConfigureLooseBehaviorGenerated()
        {
        }

        partial void ConfigureBehavior();
        partial void ConfigureLooseBehavior();
        public TFirst SomeProperty
        {
            get
            {
                return this.Apply(x => x.SomeProperty);
            }

            set
            {
                this.ApplyPropertySet(x => x.SomeProperty, value);
            }
        }

        public TFirst DoSomething(TSecond input)
        {
            return this.Apply(x => x.DoSomething(input));
        }
    }
}